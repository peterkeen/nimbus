kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jellyfin-configs-pvc
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 16Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jellyfin-cache-pvc
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 16Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  labels:
    app: jellyfin
  annotations:
    keel.sh/policy: "major"
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@every 24h"
    keel.sh/approvals: "1"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: extensions.talos.dev/i915
                    operator: Exists
      volumes:
        - name: media-nfs
          nfs:
            server: 10.73.95.84
            path: /mnt/tank/media
        - name: jellyfin-configs
          persistentVolumeClaim:
            claimName: jellyfin-configs-pvc
        - name: jellyfin-cache
          persistentVolumeClaim:
            claimName: jellyfin-cache-pvc
        - name: jellyfin-transcodes
          ephemeral:
            volumeClaimTemplate:
              spec:
                accessModes: [ "ReadWriteOnce" ]
                storageClassName: "local-path"
                resources:
                  requests:
                    storage: 64Gi
        - name: dev
          hostPath:
            path: /dev
      containers:
        - name: jellyfin
          image: ghcr.io/jellyfin/jellyfin:10.10.7
          imagePullPolicy: "Always"
          securityContext:
            privileged: true
            runAsUser: 0
          volumeMounts:
            - name: media-nfs
              mountPath: /mnt/media
            - name: jellyfin-configs
              mountPath: /config
            - name: jellyfin-cache
              mountPath: /cache
            - name: jellyfin-transcodes
              mountPath: /transcodes
            - name: dev
              mountPath: /dev
          resources:
            requests:
              memory: "4Gi"
            limits:
              memory: "4Gi"
        - name: jellyfin-clean-cache
          image: alpine:3.22
          volumeMounts:
            - name: jellyfin-transcodes
              mountPath: /transcodes
          resources:
            requests:
              memory: "128Mi"
            limits:
              memory: "128Mi"
          command:
            - /bin/ash
            - -c
            - |
              while true; do
                find /transcodes -mmin +119 -type f -exec rm -fv {} \;
                sleep 60
              done
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
spec:
  selector:
    app: jellyfin
  ports:
    - protocol: TCP
      port: 8096
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-test
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - jellyfin-test.keen.land
  rules:
    - host: jellyfin-test.keen.land
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jellyfin
                port:
                  number: 8096
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: jellyfin
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind:       Deployment
    name:       jellyfin
  updatePolicy:
    updateMode: "Off"
